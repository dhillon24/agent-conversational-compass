
version: '3.8'

services:
  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:v1.7.4
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend FastAPI Service
  backend:
    image: ${DOCKER_REGISTRY}/customer-service-backend:${IMAGE_TAG:-latest}
    ports:
      - "8000:8000"
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QDRANT_URL=http://qdrant:6333
      - STRIPE_API_KEY=${STRIPE_API_KEY}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET}
      - CLIP_MODEL=${CLIP_MODEL:-openai/clip-vit-base-patch32}
      - ENVIRONMENT=production
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      qdrant:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
        reservations:
          memory: 1G

  # MCP Server
  mcp_server:
    image: ${DOCKER_REGISTRY}/customer-service-mcp:${IMAGE_TAG:-latest}
    ports:
      - "8001:8001"
    environment:
      - BACKEND_URL=http://backend:8000
      - WORKER_URL=http://worker:8002
    depends_on:
      - backend
    restart: unless-stopped

  # Worker Service
  worker:
    image: ${DOCKER_REGISTRY}/customer-service-worker:${IMAGE_TAG:-latest}
    environment:
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - QDRANT_URL=http://qdrant:6333
      - STRIPE_API_KEY=${STRIPE_API_KEY}
    depends_on:
      - qdrant
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M

  # Frontend React Dashboard
  frontend:
    image: ${DOCKER_REGISTRY}/customer-service-frontend:${IMAGE_TAG:-latest}
    ports:
      - "80:80"
    environment:
      - VITE_API_URL=${API_URL:-http://localhost:8000}
      - VITE_COPILOT_CLOUD_API_KEY=${VITE_COPILOT_CLOUD_API_KEY}
    depends_on:
      - backend
    restart: unless-stopped

  # Reverse Proxy (Nginx)
  nginx:
    image: nginx:alpine
    ports:
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    restart: unless-stopped

volumes:
  qdrant_data:

networks:
  default:
    driver: bridge
